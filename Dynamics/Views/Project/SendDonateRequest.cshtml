@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@inject IHttpContextAccessor Accessor
@inject IProjectRepository ProjectRepository
@inject IOrganizationRepository OrganizationRepository
@inject IUserRepository UserRepository
@model Dynamics.Models.Models.ViewModel.SendDonateRequestVM

@{
    ViewData["Title"] = "Donation Page";
    Layout = "~/Views/Shared/_LayoutProject.cshtml";
    var currentProjectID = Accessor.HttpContext.Session.GetString("currentProjectID");
    var currentProjectLeaderID = Accessor.HttpContext.Session.GetString("currentProjectLeaderID");
    var userString = Accessor.HttpContext.Session.GetString("user");
    User currentUser = null;
    if (userString != null)
    {
        currentUser = JsonConvert.DeserializeObject<User>(userString);
    } 
    var organizationUserLead = await OrganizationRepository.GetOrganizationUserLead(currentUser.UserID);
    var ProjectMemberOfUser = ProjectRepository.FilterProjectMember(p => p.ProjectID.Equals(new Guid(currentProjectID)) && p.UserID.Equals(currentUser.UserID));
    var statusProjectMemberOfUser = ProjectMemberOfUser?.FirstOrDefault()?.Status;
var leader = await UserRepository.GetAsync(x=>x.UserID==new Guid(currentProjectLeaderID));
}
<!-- Donate by money -->
<section class="md:px-32 my-16">
    <h2 class="text-center font-bold text-2xl mb-6">Donate by money</h2>
    <form asp-action="SendDonateRequest" method="post" class="donateMoneyForm flex md:gap-32 gap-16">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="@Model.ProjectID" value="@currentProjectID" />
        <!-- Inputs -->
        @if (Model.TypeDonor.Equals("User"))
        {
            <div class="flex-1">
                <input type="hidden" asp-for="@Model.UserDonate.UserID" value="@currentUser?.UserID" />
                <!-- Money amount -->
                <label asp-for="@Model.UserDonate.Amount" class="form-control w-full">
                    <span class="label label-text text-lg">Enter money amount (Unit here)</span>
                    <input asp-for="@Model.UserDonate.Amount" type="number"
                           placeholder="Enter money ammount"
                           class="input input-bordered w-full" min="1" />
                    <span class="text-gray-800 font-semibold">If the field is empty, the default amount is 1</span>
                   
                </label>
                <!-- Message (maybe limit them ?) -->
                <label asp-for="@Model.UserDonate.Message" class="form-control w-full">
                    <span class="label label-text text-lg">Leave a message (optional)</span>
                    <textarea asp-for="@Model.UserDonate.Message" placeholder="Enter message"
                              class="textarea textarea-bordered textarea-md w-full"></textarea>
                   
                </label>
            </div>
        }
        @if (Model.TypeDonor.Equals("Organization"))
        {
            @* REMIND *@
            <div class="flex-1">
                <h2 class="w-full max-w-md font-semibold text-blue-600 text-lg"> You are donate as @(organizationUserLead != null ? organizationUserLead.OrganizationName : "Your Organization")</h2>
                <input type="hidden" asp-for="@Model.OrganizationUserLeadID" />

                <!-- Money amount -->
                <label asp-for="@Model.OrgDonate.Amount" class="form-control w-full">
                    <span class="label label-text text-lg">Enter money amount (Unit here)</span>
                    <input asp-for="@Model.OrgDonate.Amount" type="number"
                           placeholder="Enter money ammount"
                           class="input input-bordered w-full" min="1" />
                           <span class="text-gray-800 font-semibold">If the field is empty, the default amount is 1</span>                  
                </label>
                <!-- Message (maybe limit them ?) -->
                <label asp-for="@Model.OrgDonate.Message" class="form-control w-full">
                    <span class="label label-text text-lg">Leave a message (optional)</span>
                    <textarea asp-for="@Model.OrgDonate.Message" placeholder="Enter message"
                              class="textarea textarea-bordered textarea-md w-full "></textarea>
                    
                </label>
            </div>
        }
        
        <!-- Buttons -->
        <div class="flex-1 flex flex-col gap-4 justify-center">
            <!-- Button for CEO -->
            <!--if userid is ceoid of a organization[check status of userid in organmember ==2], if yes show the button-->
            @if (statusProjectMemberOfUser >= 2)
            {
                <div>
                    <a asp-action="SendDonateRequest" asp-route-projectid="@currentProjectID" asp-route-donor="Organization">
                        <button type="button" class="btn bg-blue-700 text-white w-full font-bold text-lg hover:bg-blue-800">
                            Donate with organization
                        </button>
                    </a>
                    <p class="text-center text-gray-700">
                        Donate as CEO to show your organization's support
                    </p>
                </div>
            }          
            <!-- Other button -->
            <button type="submit" class="btn btn-success bg-blue-700 text-white w-full font-bold text-lg">Confirm payment</button>
            <a asp-action="ManageProject" asp-route-id="@currentProjectID">
            <button type="button" class="btn bg-base-200 hover:bg-base-300 font-bold text-lg">
                Back to project &larr;
            </button>
            </a>
        </div>
    </form>
</section>

<!-- ----------------------------------------------------------------------------Donate by resource ----------------------------------------->
<section class="md:px-32 mb-16">
    <h2 class="text-center font-bold text-2xl mb-6">Donate by resource</h2>
    <!-- Step 1 -->
    <form id="donateResourceForm" asp-action="SendDonateRequest" class=" flex flex-col justify-center items-center gap-4 mb-8">
        <h3 class="text-center font-bold text-xl">1. Register a donation request</h3>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="@Model.ProjectID" value="@currentProjectID" />
         @if (Model.TypeDonor.Equals("User"))
        {
          <input type="hidden" asp-for="@Model.UserDonate.UserID" value="@currentUser?.UserID" />
            <input type="hidden" asp-for="@Model.TypeDonor" value="User" />
            <div class="form-control w-full max-w-md">
                <label asp-for="@Model.UserDonate.ProjectResourceID" class="block mb-2 text-lg font-medium text-gray-900">Select a resource </label>
                <select asp-for="@Model.UserDonate.ProjectResourceID"
                        class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                        asp-items="@(ViewData["ResourceTypeList"] as ICollection<SelectListItem>)">
                    <option disabled selected>---Select Resource Type---</option>
                </select>
                <span asp-validation-for="@Model.UserDonate.ProjectResourceID" class="text-danger text-red-500 font-semibold"></span>
            </div>

            <!-- Enter amount -->
            <label asp-for="@Model.UserDonate.Amount" class="form-control w-full max-w-md">
                <span class="label label-text text-lg font-medium">Enter amount</span>
                <input asp-for="@Model.UserDonate.Amount" type="number" placeholder="Enter ammount" class="input input-bordered" min="1"/>
                <span class="text-gray-800 font-semibold">If the field is empty, the default amount is 1</span>               
        </label>
            <label asp-for="@Model.UserDonate.Message" class="form-control w-full max-w-md">
                <span class="label label-text text-lg">Leave a message (optional)</span>
                <textarea asp-for="@Model.UserDonate.Message" placeholder="Enter message"
                          class="textarea textarea-bordered textarea-md w-full"></textarea>
               
            </label>
        }
        @if (Model.TypeDonor.Equals("Organization"))
        {
            <h2 class="w-full max-w-md font-semibold text-blue-600 text-lg"> You are donate as @(organizationUserLead != null ? organizationUserLead.OrganizationName : "Your Organization")</h2>
            <input type="hidden" asp-for="@Model.TypeDonor" value="Organization" />
            <input type="hidden" asp-for="@Model.OrganizationUserLeadID" />

            <!-- Select a resource -->
            <div class="form-control w-full max-w-md">

                <label asp-for="@Model.OrgDonate.ProjectResourceID" class="block mb-2 text-lg font-medium text-gray-900">Select a resource </label>
                <select asp-for="@Model.OrgDonate.ProjectResourceID"
                        class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                        asp-items="@(ViewData["ResourceTypeList"] as ICollection<SelectListItem>)">
                    <option disabled selected>---Select Resource Type---</option>
                </select>
                <span asp-validation-for="@Model.OrgDonate.ProjectResourceID" class="text-danger text-red-500 font-semibold"></span>
            </div>

            <!-- Enter amount -->
            <label asp-for="@Model.OrgDonate.Amount" class="form-control w-full max-w-md">
                <span class="label label-text text-lg font-medium">Enter amount</span>
                <input asp-for="@Model.OrgDonate.Amount" type="number" placeholder="Enter amount" class="input input-bordered" min="1" />
                <span class="text-gray-800 font-semibold">If the field is empty, the default amount is 1</span>
            </label>
            <label asp-for="@Model.OrgDonate.Message" class="form-control w-full max-w-md">
                <span class="label label-text text-lg">Leave a message (optional)</span>
                <textarea asp-for="@Model.OrgDonate.Message" placeholder="Enter message"
                          class="textarea textarea-bordered textarea-md w-full"></textarea>
               
            </label>
        }
        <button type="submit" class="btn btn-primary bg-blue-700 text-white font-bold">Confirm</button>
    </form>

    <!-- Step 2 -->
    <div class="flex flex-col justify-center items-center gap-4 mb-8">
        <h3 class="text-center font-bold text-xl">
            2. Contact with the leader of the project to discuss further
        </h3>
        <div>
            <!-- If you already have this script at layout, you won't need it here. It is for displaying the icons -->
            <script src="https://kit.fontawesome.com/ba8c3661b4.js"
                    crossorigin="anonymous"></script>
            <p><i class="fa-solid fa-at"></i> @leader.UserEmail</p>
            <p><i class="fa-solid fa-phone"></i> @leader.UserPhoneNumber</p>
            <p><i class="fa-solid fa-location-dot"></i> @leader.UserAddress</p>
        </div>
    </div>
    <!-- Step 3 -->
    <!-- Either show user a button to redirect to user history page or just use the table below -->
    <div class="flex flex-col justify-center items-center gap-4">
        <h3 class="text-center font-bold text-xl">3. Keep track of your donation at ...</h3>
        <!-- Table -->
        <div class="overflow-x-auto">
            <table class="table">
                <thead>
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>Quantity</th>
                            <th>Status</th>
                    </tr>
                </thead>
                <tbody>
          @if (Model.TypeDonor.Equals("User"))
        {
            for(int i = 0; i < Model.UserTransactionHistory?.Count();i++){
                var item  = Model.UserTransactionHistory.ElementAt(i);
                            <tr>
                                <th>@(i+1)</th>
                                <td>@item.ProjectResource?.ResourceName</td>
                                <td>@item.Amount</td>
                                <td>
                                    @if (item.Status == 1)
                                    {
                                        <div class="badge badge-success min-w-24">Accepted</div>
                                    }
                                    else{
                                         <div class="badge badge-error min-w-24">Pending</div>
                                        }
                                </td>
                            </tr>
                        }
                        <!-- row 1 -->
                    }else if (Model.TypeDonor.Equals("Organization"))
                    {
                        for (int i = 0; i < Model.OrgTransactionHistory?.Count(); i++)
                        {
                            var item = Model.OrgTransactionHistory.ElementAt(i);
                            <tr>
                                <th>@(i + 1)</th>
                                <td>@item.ProjectResource?.ResourceName</td>
                                <td>@item.Amount</td>
                                <td>
                                    @if (item.Status == 1)
                                    {
                                        <div class="badge badge-success min-w-24">Accepted</div>
                                    }
                                    else
                                    {
                                        <div class="badge badge-error min-w-24">Pending</div>
                                    }
                                </td>
                            </tr>
                        }
                        <!-- row 1 -->
                    }

                </tbody>
            </table>
        </div>
        <!-- End table -->
        <button class="btn btn-primary">Click me</button>
    </div>
</section>
<script>
    //---------------sweetalert for donate---------------------
    document.querySelector('#donateResourceForm').addEventListener('submit', function (event) {
        // Prevent the default form submission
        event.preventDefault();
        var form = this;  // Reference to the form

        // Validate the form using jQuery validation (or you can use native JavaScript validation if desired)
        if ($(form).valid()) {  // Assuming jQuery validation is used

            // Custom SweetAlert2 dialog using Tailwind CSS
            const swalWithTailwind = Swal.mixin({
                customClass: {
                    confirmButton: "bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded",
                    cancelButton: "bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded mr-4"
                },
                buttonsStyling: false // Disable default styling to use custom classes
            });

            swalWithTailwind.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, I confirm!",
                cancelButtonText: "No, cancel!",
                reverseButtons: true
            }).then(result => {
                if (result.isConfirmed) {
                    // If confirmed, send the form data using fetch API
                    fetch(form.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'  // Set the content type for form data
                        },
                        body: new URLSearchParams(new FormData(form))  // Serialize the form data
                    })
                        .then(response => response.json())  // Parse the JSON response
                        .then(data => {
                            // Check if the server returned success
                            if (data.success) {
                                swalWithTailwind.fire({
                                    title: "Donate!",
                                    html: `<p>${data.message}</p><p>Thank you for your contribution!</p>`,
                                    icon: "success"
                                }).then(() => {
                                    // Optionally, reload or redirect after success
                                    window.location.reload();
                                });
                            } else {
                                swalWithTailwind.fire({
                                    title: "Error",
                                    text: data.message,
                                    icon: "error"
                                });
                            }
                        })
                        .catch(error => {
                            // Handle network errors or other issues
                            swalWithTailwind.fire({
                                title: "Error",
                                text: "An error occurred while processing your request: " + error,
                                icon: "error"
                            });
                        });
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    swalWithTailwind.fire({
                        title: "Cancelled",
                        text: "Your donation request was canceled.",
                        icon: "error"
                    });
                }
            });
        }
    });
</script>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
