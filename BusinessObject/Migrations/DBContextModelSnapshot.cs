// <auto-generated />
using System;
using BussinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BussinessObject.Organization", b =>
                {
                    b.Property<int>("organizationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("organizationID"));

                    b.Property<string>("attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ceoID")
                        .HasColumnType("int");

                    b.Property<string>("organizationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("shutdownDay")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("startTime")
                        .HasColumnType("date");

                    b.HasKey("organizationID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("BussinessObject.OrganizationMember", b =>
                {
                    b.Property<int>("organizationID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("organizationID", "userID");

                    b.HasIndex("userID");

                    b.ToTable("OrganizationMember");
                });

            modelBuilder.Entity("BussinessObject.OrganizationResource", b =>
                {
                    b.Property<int>("resourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("resourceID"));

                    b.Property<string>("contentTransaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("donator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organizationID")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("resourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("resourceID");

                    b.HasIndex("organizationID");

                    b.ToTable("OrganizationResources");
                });

            modelBuilder.Entity("BussinessObject.OrganizationToProjectTransactionHistory", b =>
                {
                    b.Property<int>("transactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transactionID"));

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organizationID")
                        .HasColumnType("int");

                    b.Property<int>("projectID")
                        .HasColumnType("int");

                    b.Property<string>("time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("transactionID");

                    b.HasIndex("organizationID");

                    b.HasIndex("projectID");

                    b.ToTable("OrganizationToProjectTransactionHistory");
                });

            modelBuilder.Entity("BussinessObject.Project", b =>
                {
                    b.Property<int>("projectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("projectID"));

                    b.Property<string>("attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("endTime")
                        .HasColumnType("date");

                    b.Property<int?>("leaderID")
                        .HasColumnType("int");

                    b.Property<int>("organizationID")
                        .HasColumnType("int");

                    b.Property<string>("projectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("requestID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("startTime")
                        .HasColumnType("date");

                    b.HasKey("projectID");

                    b.HasIndex("organizationID");

                    b.HasIndex("requestID")
                        .IsUnique()
                        .HasFilter("[requestID] IS NOT NULL");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BussinessObject.ProjectMember", b =>
                {
                    b.Property<int>("projectID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("projectID", "userID");

                    b.HasIndex("userID");

                    b.ToTable("ProjectMembers");
                });

            modelBuilder.Entity("BussinessObject.ProjectResource", b =>
                {
                    b.Property<int>("resourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("resourceID"));

                    b.Property<int?>("expectedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("projectID")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("resourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("resourceID");

                    b.HasIndex("projectID");

                    b.ToTable("ProjectResources");
                });

            modelBuilder.Entity("BussinessObject.Request", b =>
                {
                    b.Property<int>("requestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("requestID"));

                    b.Property<string>("attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("creationDate")
                        .HasColumnType("date");

                    b.Property<int>("isEmergency")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("requestID");

                    b.HasIndex("userID")
                        .IsUnique();

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("BussinessObject.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("dob")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("roleID")
                        .HasColumnType("int");

                    b.HasKey("userID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BussinessObject.UserToOrganizationTransactionHistory", b =>
                {
                    b.Property<int>("transactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transactionID"));

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organizationID")
                        .HasColumnType("int");

                    b.Property<string>("time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("transactionID");

                    b.HasIndex("organizationID");

                    b.HasIndex("userID");

                    b.ToTable("UserToOrganizationTransactionHistories");
                });

            modelBuilder.Entity("BussinessObject.UserToProjectTransactionHistory", b =>
                {
                    b.Property<int>("transactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transactionID"));

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectID")
                        .HasColumnType("int");

                    b.Property<string>("time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("transactionID");

                    b.HasIndex("projectID");

                    b.HasIndex("userID");

                    b.ToTable("UserToProjectTransactionHistories");
                });

            modelBuilder.Entity("BussinessObject.OrganizationMember", b =>
                {
                    b.HasOne("BussinessObject.Organization", "Organization")
                        .WithMany("OrganizationMember")
                        .HasForeignKey("organizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.User", "User")
                        .WithMany("OrganizationMember")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObject.OrganizationResource", b =>
                {
                    b.HasOne("BussinessObject.Organization", "Organization")
                        .WithMany("OrganizationResource")
                        .HasForeignKey("organizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("BussinessObject.OrganizationToProjectTransactionHistory", b =>
                {
                    b.HasOne("BussinessObject.Organization", "Organization")
                        .WithMany("OrganizationToProjectTransactions")
                        .HasForeignKey("organizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.Project", "Project")
                        .WithMany("OrganizationToProjectTransactions")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BussinessObject.Project", b =>
                {
                    b.HasOne("BussinessObject.Organization", "Organization")
                        .WithMany("Project")
                        .HasForeignKey("organizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.Request", "Request")
                        .WithOne("Project")
                        .HasForeignKey("BussinessObject.Project", "requestID");

                    b.Navigation("Organization");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("BussinessObject.ProjectMember", b =>
                {
                    b.HasOne("BussinessObject.Project", "Project")
                        .WithMany("ProjectMember")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.User", "User")
                        .WithMany("ProjectMember")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObject.ProjectResource", b =>
                {
                    b.HasOne("BussinessObject.Project", "Project")
                        .WithMany("ProjectResource")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BussinessObject.Request", b =>
                {
                    b.HasOne("BussinessObject.User", "User")
                        .WithOne("Request")
                        .HasForeignKey("BussinessObject.Request", "userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObject.UserToOrganizationTransactionHistory", b =>
                {
                    b.HasOne("BussinessObject.Organization", "Organization")
                        .WithMany("UserToOrganizationTransactions")
                        .HasForeignKey("organizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.User", "User")
                        .WithMany("UserToOrganizationTransactions")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObject.UserToProjectTransactionHistory", b =>
                {
                    b.HasOne("BussinessObject.Project", "Project")
                        .WithMany("UserToProjectTransactions")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.User", "User")
                        .WithMany("UserToProjectTransactions")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObject.Organization", b =>
                {
                    b.Navigation("OrganizationMember");

                    b.Navigation("OrganizationResource");

                    b.Navigation("OrganizationToProjectTransactions");

                    b.Navigation("Project");

                    b.Navigation("UserToOrganizationTransactions");
                });

            modelBuilder.Entity("BussinessObject.Project", b =>
                {
                    b.Navigation("OrganizationToProjectTransactions");

                    b.Navigation("ProjectMember");

                    b.Navigation("ProjectResource");

                    b.Navigation("UserToProjectTransactions");
                });

            modelBuilder.Entity("BussinessObject.Request", b =>
                {
                    b.Navigation("Project")
                        .IsRequired();
                });

            modelBuilder.Entity("BussinessObject.User", b =>
                {
                    b.Navigation("OrganizationMember");

                    b.Navigation("ProjectMember");

                    b.Navigation("Request")
                        .IsRequired();

                    b.Navigation("UserToOrganizationTransactions");

                    b.Navigation("UserToProjectTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
